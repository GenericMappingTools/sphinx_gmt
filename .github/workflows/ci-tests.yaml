# This workflow install sphinx_gmt, and build documentation (i.e., running tests)

name: Tests

on:
  push:
    branches: [main]
  pull_request:

jobs:
  style_check:
    name: Style Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3.1.2
        with:
          python-version: 3.9

      - name: Install pacakges
        run: pip install sphinx black pylint

      - name: Formatting check (black and pylint)
        run: make check

  test:
    name: ${{ matrix.os }} - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.10']
        os: [ubuntu-latest, macOS-latest, windows-latest]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      # Cancel previous runs that are not completed
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          # fecth all history so that setuptools_scm works
          fetch-depth: 0

      # Install Mambaforge with conda-forge dependencies
      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          activate-environment: sphinx_gmt
          python-version: ${{ matrix.python-version }}
          channels: conda-forge,nodefaults
          channel-priority: strict
          miniforge-version: latest
          miniforge-variant: Mambaforge
          mamba-version: "*"
          use-mamba: true

      # Install GMT and other required dependencies from conda-forge
      - name: Install GMT and required dependencies
        run: |
          mamba install --yes gmt jinja2 sphinx sphinx_rtd_theme numpydoc build

      # Show installed pkg information for postmortem diagnostic
      - name: List installed packages
        run: mamba list

      # Install the package that we want to test
      - name: Install the package
        run: |
          python -m build --sdist
          pip install dist/*

      # Build the documentation
      - name: Build the documentation
        run: make -C doc clean all
